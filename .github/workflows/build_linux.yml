name: Build

on:
  push:
  pull_request:
  schedule:
    - cron: "0 8 * * *"

jobs:
  test:
    name: test ${{ matrix.py }} - ubuntu
    runs-on: ubuntu-latest
    strategy:
      matrix:
        py:
          - 3.9
          - 3.8
          - 3.7
          - 3.6
          - pypy3
    steps:
      - name: Setup Python for test ${{ matrix.py }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.py }}
      - name: Install OS dependencies
        run: sudo apt-get install -y libsnappy-dev && pip install python-snappy
      - uses: actions/checkout@v2
      - name: Install Testing Dependencies
        run: pip install -r developer_requirements.txt
      - name: Run Tests
        run: ./run-tests.sh && codecov
      - name: Make Wheel
        if: ${{ matrix.py == '3.9' }}
        uses: RalfG/python-wheels-manylinux-build@v0.3.1-manylinux2014_x86_64
        env:
          # Temporary fix for LD_LIBRARY_PATH issue. See
          # https://github.com/RalfG/python-wheels-manylinux-build/issues/26
          LD_LIBRARY_PATH: /usr/local/lib:${{ env.LD_LIBRARY_PATH }}
        with:
          build-requirements: 'cython'
          python-versions: 'cp36-cp36m cp37-cp37m cp38-cp38 cp39-cp39'
      - name: Archive wheels
        if: ${{ matrix.py == '3.9' }}
        uses: actions/upload-artifact@v2
        with:
          name: linux-wheels
          path: dist/*-manylinux*.whl
          if-no-files-found: error
      - name: Get release id
        if: startsWith(github.ref, 'refs/tags/')
        id: get_release_id
        run: |
           release_id=$(curl -sL https://api.github.com/repos/${{github.repository}}/releases/tags/${{github.event.release.tag_name}}?access_token=${{ secrets.GITHUB_TOKEN }} | jq -r '.id')
           echo "release_id=${release_id}" >> $GITHUB_ENV
      # https://github.com/actions/upload-release-asset/issues/47#issuecomment-659071145
      - name: Push wheels to repo release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/github-script@v2
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs').promises;

            const { repo: { owner, repo }, sha } = context;
            console.log({ owner, repo, sha });

            for (let file of await fs.readdir('dist')) {
              console.log('uploading', file);

              await github.repos.uploadReleaseAsset({
                owner, repo,
                release_id: $release_id,
                name: file,
                data: await fs.readFile(`dist/${file}`)
              });
            }
