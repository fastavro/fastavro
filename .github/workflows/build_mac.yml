name: Build

on:
  create:
  push:
    branches:
      - '**'
  pull_request:
  schedule:
    - cron: "0 8 * * *"

jobs:
  test:
    name: test ${{ matrix.py }} - macos
    runs-on: macos-latest
    strategy:
      matrix:
        py:
          - 3.10.0
          - 3.9
          - 3.8
          - 3.7
          - pypy-3.8
    steps:
      - name: Setup Python for test ${{ matrix.py }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.py }}
      - name: Install OS dependencies
        run: |
          for i in 1 2 3; do
            echo "try $i" && \
            brew update -vvv && \
            brew install snappy && \
            CPPFLAGS="-I/usr/local/include -L/usr/local/lib" python -m pip install python-snappy && \
            exit 0 || true;
          done
          exit 1
        shell: bash
      - uses: actions/checkout@v3
      - name: Install numpy for pypy3
        if: ${{ matrix.py == 'pypy-3.8' }}
        run: |
          brew install openblas
          OPENBLAS="$(brew --prefix openblas)" pip install numpy
      - name: Install Testing Dependencies
        run: pip install -r developer_requirements.txt
      - name: Run Tests
        run: SKIP_BLACK="1" ./run-tests.sh && codecov
      - name: Make Wheel
        if: ${{ matrix.py != 'pypy-3.8' }}
        run: python setup.py bdist_wheel
      - name: Archive wheels
        if: ${{ matrix.py != 'pypy-3.8' }}
        uses: actions/upload-artifact@v3
        with:
          name: osx-wheel-${{ matrix.py }}
          path: dist/*.whl
          if-no-files-found: error
      - name: Make release
        if: ${{ github.event_name == 'create' && github.event.ref_type == 'tag' && matrix.py == '3.10.0' }}
        continue-on-error: true
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{github.repository}}/releases -d '{"tag_name": "${{github.event.ref}}"}'
      - name: Get release id
        if: ${{ github.event_name == 'create' && github.event.ref_type == 'tag' && matrix.py != 'pypy-3.8' }}
        id: get_release_id
        run: |
          release_id=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{github.repository}}/releases/tags/${{github.event.ref}} | jq -r '.id')
          echo ${release_id}
          echo "release_id=${release_id}" >> $GITHUB_ENV
      # https://github.com/actions/upload-release-asset/issues/47#issuecomment-659071145
      - name: Push wheels to repo release
        if: ${{ github.event_name == 'create' && github.event.ref_type == 'tag' && matrix.py != 'pypy-3.8' }}
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs').promises;

            const { repo: { owner, repo }, sha } = context;
            console.log({ owner, repo, sha });

            for (let file of await fs.readdir('dist')) {
              console.log('uploading', file);

              await github.repos.uploadReleaseAsset({
                owner, repo,
                release_id: ${{ env.release_id }},
                name: file,
                data: await fs.readFile(`dist/${file}`)
              });
            }
