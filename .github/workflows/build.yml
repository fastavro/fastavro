name: Build

on:
  push:
  pull_request:
  schedule:
    - cron: "0 8 * * *"


jobs:
  test:
    name: test ${{ matrix.py }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os:
          - ubuntu
          - windows
          - macos
        py:
          - 3.8
          - 3.7
          - 3.6
          - pypy3
    steps:
      - name: Setup Python for test ${{ matrix.py }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.py }}
      - name: Install OS dependencies
        run: |
          for i in 1 2 3; do
            echo "try $i" && \
            ${{ runner.os == 'Linux' && 'sudo apt-get install -y libsnappy-dev && pip install python-snappy' || true}} && \
            ${{ runner.os == 'macOS' && 'brew update -vvv && brew install snappy && CPPFLAGS="-I/usr/local/include -L/usr/local/lib" python -m pip install python-snappy' || true}} && \
            exit 0 || true;
          done
          exit 1
        shell: bash
      - uses: actions/checkout@v2
      - name: Install Testing Dependencies
        run: pip install -r developer_requirements.txt
      - name: Run Tests
        if: ${{ !(matrix.py == '3.9') && !(runner.os == 'macOS' && matrix.py == 'pypy3') }}
        run: ${{ runner.os == 'Linux' && './run-tests.sh && codecov' || true}} && ${{ runner.os == 'macOS' && './run-tests.sh && codecov' || true}} && ${{ runner.os == 'Windows' && '.\run-tests.cmd && codecov' || true}}
      - name: Make Wheel
        if: ${{ (runner.os == 'macOS' || runner.os == 'Windows') && !(matrix.py == 'pypy3') }}
        run: ${{ runner.os == 'macOS' && 'FASTAVRO_USE_CYTHON=1 python setup.py bdist_wheel' || true}} && ${{ runner.os == 'Windows' && 'set FASTAVRO_USE_CYTHON=1 && python setup.py bdist_wheel' || true}}
      - name: Make Wheel Linux
        if: ${{ runner.os == 'Linux' && matrix.py == '3.8' }}
        uses: RalfG/python-wheels-manylinux-build@v0.3.1-manylinux2014_x86_64
        with:
          build-requirements: 'cython'
          python-versions: 'cp36-cp36m cp37-cp37m cp38-cp38 cp39-cp39'
